name: SonarQube Cloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and generate jacoco report
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_21_X64 }}
        run: mvn clean verify jacoco:report
      - name: Run SonarQube analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          JAVA_HOME: ${{ env.JAVA_HOME_21_X64 }}
        run: |
          mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.java.source=21 \
          -Dsonar.java.target=21 \
          -X -Dsonar.verbose=true \
          -Dsonar.projectKey=Tech-Challenge-7SOAT_tech-challenge-7soat \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
          -Dsonar.exclusions=src/main/kotlin/com/fiapx/videos/entities/**,src/main/kotlin/com/fiapx/videos/config/**,src/main/kotlin/com/fiapx/videos/extensions/**,src/main/kotlin/com/fiapx/videos/repositories/**
